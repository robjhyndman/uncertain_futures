---
title: "Forecasting the future and the future of forecasting"
author: "Rob J Hyndman"
pdf-engine: latexmk
fig-width: 7.5
fig-height: 3.5
format:
  beamer:
    theme: monash
    aspectratio: 169
    fontsize: 14pt
    section-titles: false
    knitr:
      opts_chunk:
        dev: "CairoPDF"
include-in-header: header.tex
highlight-style: tango
keep-tex: true
execute:
  echo: false
  message: false
  warning: false
  cache: true
---

```{r setup}
#| include: false
#| cache: false
source("setup.R")
```

```{r cover, include=FALSE}
# Generate plot for title page
Cairo::CairoPDF(file = "figure/cover.pdf", width = 5, height = 2.5)
austa <- readr::read_csv("http://OTexts.com/fpp3/extrafiles/austa.csv") %>%
  as_tsibble(index = Year)
fit <- austa %>% model(ETS(Visitors))
sim <- fit %>%
  generate(h = 10, times = 20) %>%
  mutate(
    replicate = factor(.rep, levels = 1:20, labels = paste("Future", 1:20))
  )
ggplot(austa, aes(x = Year)) +
  geom_line(aes(y = Visitors, colour = "Data")) +
  geom_line(aes(y = .sim, colour = replicate), data = sim) +
  scale_colour_manual(
    values = c(
      "#000000", "#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442",
      sample(rainbow(13))
    ),
    breaks = c("Data", paste("Future", 1:20)),
    name = " "
  ) +
  guides(color = "none") +
  theme_minimal() +
  scale_y_discrete(breaks = "none") +
  scale_x_discrete(breaks = "none") +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  )
crop::dev.off.crop()
```

```{r get_local, eval=FALSE, include=FALSE}
localcases <- readr::read_csv("~/git/covid19ensemble/inputs/local_cases_input.csv") %>%
  rename(
    n = count,
    date = date_onset
  ) %>%
  # Adjust count to include cases yet to be detected
  mutate(n = n / detection_probability) %>%
  # Remove last days with prob of detection < 0.5
  filter(detection_probability > 0.5) %>%
  as_tsibble(index = date, key = state) %>%
  select(date, state, n) %>%
  filter(state != "AUS")
saveRDS(localcases, "localcases.rds")
```

```{r read_local, echo=FALSE, include=FALSE}
localcases <- readRDS("localcases.rds")
```

## Outline

\vspace*{0.7cm}\tableofcontents

# The dark history of forecasting

## Forecasting by maggots

\placefig{0.4}{1.5}{width=8cm, height=7cm}{sheepliverbm}

\begin{textblock}{6.7}(8.5,1.7)
\raggedright\color{black}
\textbf{Clay model of sheep's liver}\\[0.4cm]
Used by Bab\-ylon\-ian forecasters approximately 600 B.C.\\[0.7cm]
Now in \rlap{British Museum.}
\end{textblock}

## Forecasting by hallucination

\only<1->{\placefig{0}{1.1}{height=8.25cm, width=20cm}{delphitemple}}
\only<2>{\placefig{7}{1.1}{height=8cm, width=20cm}{1106}}

## Forecasting and the law

\placefig{10}{1.1}{width=6cm, height=20cm}{250px-Constance_II_Colosseo_Rome_Italy}

\begin{textblock}{8}(1,1.8)\raggedright
\begin{block}{}
\color{black}
Anyone who consults a soothsayer on account of curiosity of the future will suffer capital punishment.

\mbox{}\hfill\emph{Codex Theodosianus 9.16.4}
\end{block}
\end{textblock}

## Reputations can be made and lost

\vspace*{0.2cm}
\begin{block}{}
``I think there is a world market for maybe five computers.'' \newline
{\null\hfill\small (Chairman of IBM, 1943)}
\end{block}\pause

\begin{alertblock}{}
``There is no reason anyone would want a computer in their home.''
\null\hfill{\small (President, DEC, 1977)}
\end{alertblock}\pause

\begin{block}{}
“There’s no chance that the iPhone is going to get any significant market share. No chance.”\newline
\null\hfill{\small (Steve Ballmer, CEO Microsoft, April 2007)}
\end{block}\pause

\begin{alertblock}{}
``We're going to be opening relatively soon \dots The virus \dots\ will go away in April.''
\hfill{\small (Donald Trump, February 2020)}
\end{alertblock}

# What is a forecast?

## Random futures

```{r austa}
#| include: false
# Grab ABS data
austa <- readxl::read_excel("340101.xlsx", sheet="Data1", skip=9) %>%
  rename(date = `Series ID`, value = A85375847A) %>%
  select(date, value) %>%
  transmute(
    Month = yearmonth(date),
    Visitors = value / 1e3
  ) %>%
  bind_rows(tibble(
    Month = yearmonth(seq(as.Date("2021-11-01"), by = "1 month", length = 2)),
    Visitors = NA_real_
  )) %>%
  as_tsibble(index = Month) %>%
  filter(Month >= yearmonth("2000 Jan"))
# Fit ETS model
fit <- austa %>%
  filter(Month < yearmonth("2018 Jan")) %>%
  model(ETS(Visitors))
# Product forecasts
fc <- forecast(fit, h = 48) %>%
  mutate(Month = as.Date(Month))
# Simulate 100 future sample paths
set.seed(1967)
sim <- fit %>%
  generate(h = 48, times = 100) %>%
  mutate(
    replicate = factor(.rep, levels = 1:100, labels = paste("Future", 1:100)),
    .rep = as.numeric(.rep)
  ) %>%
  as_tibble() %>%
  mutate(Month = as.Date(Month))
# Nice colors
cols <- scale_colour_manual(
  values = c("#D55E00", "#0072B2", "#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442", sample(rainbow(93))),
  breaks = paste("Future", 1:100),
  name = " "
)
# Now build up some plots with alignment
p1 <- austa %>%
  mutate(Visitors = if_else(Month >= yearmonth("2018 Jan"), NA_real_, Visitors)) %>%
  as_tibble() %>%
  mutate(Month = as.Date(Month)) %>%
  ggplot(aes(x = Month, y = Visitors)) +
  geom_line() +
  labs(
    x = "Month",
    y = "Thousands of visitors",
    title = "Total short-term visitors to Australia"
  ) +
  scale_x_date(
    breaks = seq(as.Date("2000-01-01"), by = "5 years", l = 5),
    labels = paste("Jan", seq(2000, 2020, by = 5)),
    minor_breaks = seq(as.Date("2001-01-01"), by = "1 year", l = 25)
  ) +
  ylim(min(austa$Visitors, sim$.sim, na.rm = TRUE), max(austa$Visitors, sim$.sim, na.rm = TRUE))
p2 <- p1 + cols +
  geom_line(aes(y = .sim, group = replicate, colour = replicate),
    data = sim %>% filter(.rep <= 1)
  )
p3 <- p1 + cols +
  geom_line(aes(y = .sim, group = replicate, colour = replicate),
    data = sim %>% filter(.rep <= 2)
  )
p4 <- p1 + cols +
  geom_line(aes(y = .sim, group = replicate, colour = replicate),
    data = sim %>% filter(.rep <= 3)
  )
p5 <- p1 + cols +
  geom_line(aes(y = .sim, group = replicate, colour = replicate),
    data = sim %>% filter(.rep <= 10)
  )
p6 <- p1 + cols +
  geom_line(aes(y = .sim, group = replicate, colour = replicate), alpha = 0.5, data = sim) +
  guides(colour = "none")
p7 <- p1 +
  geom_line(aes(y = .sim, group = replicate, colour = replicate), alpha = 0.5, col = "gray", data = sim) +
  guides(colour = "none")
p8 <- p7 + autolayer(fc, level = c(50, 90))
p9 <- p8 + coord_cartesian(xlim=as.Date(c("2013-01-01","2021-08-01"))) +
  scale_x_date(
    breaks = seq(as.Date("2000-01-01"), by = "2 years", l = 11),
    labels = paste("Jan", seq(2000, 2020, by = 2)),
    minor_breaks = seq(as.Date("2001-01-01"), by = "1 year", l = 25)
  )
aligned_plots <- align_patches(p1, p2, p3, p4, p5, p6, p7, p8, p9)
for(i in seq(length(aligned_plots))) {
  Cairo::CairoPDF(file = paste0("figure/austa",i,".pdf"),
                  width = 7.5, height=3.5)
  print(aligned_plots[[i]])
  crop::dev.off.crop()
}
Cairo::CairoPDF(file = paste0("figure/austa10.pdf"),
                  width = 7.5, height=3.5)
aligned_plots[[9]] +
  geom_line(
    colour = "black",
    data = austa %>% filter(Month >= yearmonth("2018 Jan")) %>% mutate(Month = as.Date(Month))
  )
crop::dev.off.crop()
```

\forecast\pause\centering
\only<1>{\includegraphics[width=14.5cm]{austa1}}
\only<2>{\includegraphics[width=14.5cm]{austa2}}
\only<3>{\includegraphics[width=14.5cm]{austa3}}
\only<4>{\includegraphics[width=14.5cm]{austa4}}
\only<5>{\includegraphics[width=14.5cm]{austa5}}
\only<6>{\includegraphics[width=14.5cm]{austa6}}
\only<7>{\includegraphics[width=14.5cm]{austa7}}
\only<8>{\includegraphics[width=14.5cm]{austa8}}
\only<9>{\includegraphics[width=14.5cm]{austa9}}
\only<10->{\includegraphics[width=14.5cm]{austa10}}

\only<2->{\simfutures}

\only<11>{\begin{textblock}{8.5}(.3,6.8)\begin{alertblock}{}\fontsize{12}{13}\sf
``He who sees the past as surprise-free is bound to have a future full of surprises.''\\\mbox{}\hfill{\small (Amos Tversky)}
\end{alertblock}\end{textblock}
}

# What can we forecast?


## Forecasting is difficult

\fullheight{hopecasts}

## What can we forecast?

\only<1>{\fullheight{AusBOM}}
\only<2>{\placefig{0}{1.}{height=10.8cm, width=20cm}{nasdaq-stock-market}}
\only<3>{\placefig{0}{1.}{height=10.2cm, width=20cm}{Forex2}}
\only<4>{\placefig{0}{1.}{height=11.2cm, width=20cm}{pills}}
\only<5>{\placefig{0}{1.}{height=9.2cm, width=20cm}{elecwires}
\begin{textblock}{12}(0.2,8.8)\tiny\textcolor{gray}{\texttt{Varistor60, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=59368531}}
\end{textblock}}
\only<6>{\placefig{0}{1.}{height=9.2cm, width=20cm}{covid}}
\only<7>{\placefig{0}{1.}{height=10.2cm, width=20cm}{12apostles}}

## Which is easiest to forecast?

 * daily electricity demand in 3 days time
 * timing of next Halley's comet appearance
 * time of sunrise this day next year
 * Google stock price tomorrow
 * Google stock price in 6 months time
 * maximum temperature tomorrow
 * exchange rate of \$US/AUS next week
 * total sales of drugs in Australian pharmacies next month

\vspace*{10cm}

## Which is easiest to forecast?

 1. time of sunrise this day next year
 2. timing of next Halley's comet appearance
 3. maximum temperature tomorrow
 4. daily electricity demand in 3 days time
 5. total sales of drugs in Australian pharmacies next month
 6. Google stock price tomorrow
 7. exchange rate of \$US/AUS next week
 8. Google stock price in 6 months time

\only<2>{\begin{block}{}\begin{itemize}\tightlist
 \item how do we measure ``easiest''?
 \item what makes something easy/difficult to forecast?
 \end{itemize}\end{block}}

\vspace*{10cm}

## Forecastability factors
\color{black}

Something is easier to forecast if:

 1. we have a good understanding of the factors that contribute to it, and can measure them.
 2. there is lots of data available;
 3. the future is somewhat similar to the past
 4. the forecasts cannot affect the thing we are trying to forecast.


# Forecasting PBS expenditure

## Forecasting PBS expenditure

\placefig{0}{1}{height=11.2cm, width=20cm}{pills}

## Forecasting PBS expenditure

### The Pharmaceutical Benefits Scheme (PBS) is the Australian government drugs subsidy scheme.

  * Many drugs bought from pharmacies are subsidised to allow more equitable access to modern drugs.
  * The cost to government is determined by the number and types of drugs purchased. Currently nearly 1\% of GDP.
  * The total cost is budgeted based on forecasts of drug usage.

## Forecasting PBS expenditure
\fullheight{pbs2}

## Forecasting PBS expenditure

\begin{block}{The phone call (2001)}
\begin{itemize}
\item \$4.5 billion PBS budget, under-forecasted by \$800 million.
\item Thousands of products. Seasonal demand.
\item Subject to covert marketing, volatile products, uncontrollable expenditure.
\item Although monthly data available for 10 years, data are aggregated to annual values, and only the first three years are used in estimating the forecasts.
\item All forecasts being done with the \texttt{FORECAST} function in MS-Excel!
\end{itemize}
\end{block}

## ETS forecasts of PBS data

```{r pbs1}
pbs <- PBS %>%
  group_by(ATC2) %>%
  summarise(Cost = sum(Cost)/1e6) %>%
  ungroup()
pbs %>%
  filter(ATC2 == "A05") %>%
  model(ETS(Cost)) %>%
  forecast(h = "3 years") %>%
  autoplot(pbs, level = c(50, 90)) +
  labs(y = "Cost ($million)", title="Monthly sales: A05 products")
```

## ETS forecasts of PBS data

```{r pbs2}
pbs %>%
  filter(ATC2 == "A10") %>%
  model(ETS(Cost)) %>%
  forecast(h = "3 years") %>%
  autoplot(pbs, level = c(50, 90)) +
  labs(y = "Cost ($million)", title="Monthly sales: A10 products")
```

## ETS forecasts of PBS data

```{r pbs3}
pbs %>%
  filter(ATC2 == "D01") %>%
  model(ETS(Cost)) %>%
  forecast(h = "3 years") %>%
  autoplot(pbs, level = c(50, 90)) +
  labs(y = "Cost ($million)", title="Monthly sales: D01 products")
```

## ETS forecasts of PBS data

```{r pbs4}
pbs %>%
  filter(ATC2 == "S01") %>%
  model(ETS(Cost ~ trend("N"))) %>%
  forecast(h = "3 years") %>%
  autoplot(pbs, level = c(50, 90)) +
  labs(y = "Cost ($million)", title="Monthly sales: S01 products")
```

## Forecasting PBS expenditure
\fontsize{13.5}{15}\sf

  * Developed an automatic forecasting algorithm for exponential smoothing state space models based on the AIC.
  * Exponential smoothing models allowed for time-changing trend and seasonal patterns.
  * Forecast MAPE reduced from 15--20% to 0.6%.
  * State space models provide prediction intervals which give a sense of uncertainty.
  * Theory and algorithm published as Hyndman et al (IJF, 2002).
  * Now implemented in R as `ets()` in forecast package, as `ETS()` function in fable package, and in Tableau and elsewhere.
  * NOT implemented in `FORECAST.ETS` function in MS-Excel.

## Forecastability factors

 1. we have a good understanding of the factors that contribute to it, and can measure them.
 2. there is lots of data available;
 3. the future is somewhat similar to the past
 4. the forecasts cannot affect the thing we are trying to forecast.

# Forecasting peak electricity demand

## Forecasting peak electricity demand

\placefig{0}{1}{height=9.2cm, width=20cm}{elecwires}
\begin{textblock}{12}(0.2,8.8)\tiny\textcolor{gray}{\texttt{Varistor60, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=59368531}}
\end{textblock}

## Forecasting peak electricity demand

\begin{block}{The phone call (2006)}
\begin{itemize}
\item  We want to forecast the peak electricity demand in a half-hour period in twenty years time.
\item We have fifteen years of half-hourly electricity data, temperature data and some economic and demographic data.
\item The location is South Australia: home to the most volatile electricity demand in the world.
\end{itemize}
\end{block}

\vspace*{0.2cm}\pause
\begin{center}
\hspace*{6.7cm}\begin{beamerboxesrounded}[lower=block
body,width={4.6cm}]{} \textbf{\alert{Sounds impossible?}}
\end{beamerboxesrounded}
\end{center}

## Forecasting peak electricity demand

```{r elec1}
vic_elec %>%
  autoplot(Demand) +
  labs(title = "VIC statewide demand", y = "GW")
```

## Forecasting peak electricity demand

```{r elec2}
vic_elec %>%
  filter(Date >= "2013-12-01", Date <= "2014-02-28") %>%
  autoplot(Demand) +
  labs(title = "VIC statewide demand: Summer 2013/14", y = "GW")
```

## Forecasting peak electricity demand

```{r elec2a}
vic_elec %>%
  filter(Date >= "2013-12-01", Date <= "2014-02-28") %>%
  pivot_longer(Demand:Temperature, values_to = "value", names_to = "variable") %>%
  ggplot(aes(x = Time, y = value)) +
  geom_line() +
  facet_grid(variable ~ ., scales = "free_y") +
  labs(
    title = "VIC statewide demand: Summer 2013/14",
    x = "Time [30m]",
    y = "Degrees Celsius                           GW"
  )
```

## Forecasting peak electricity demand

```{r elec3, include=FALSE}
p1 <- vic_elec %>%
  ggplot(aes(x = Temperature, y = Demand)) +
  geom_point() +
  labs(y = "Demand (GW)", x = "Temperature (degrees C)")
p2 <- vic_elec %>%
  mutate(
    dow = lubridate::wday(Date, week_start = 1),
    Workday = if_else(dow <= 5 & !Holiday, "Workday", "Non-workday")
  ) %>%
  ggplot(aes(x = Temperature, y = Demand, col = Workday)) +
  geom_point(alpha = 0.3) +
  labs(y = "Demand (GW)", x = "Temperature (degrees C)")
aligned_plots <- align_patches(p1, p2)
png(paste0(here::here("figure"), "/elecscatter1.png"),
    width = 20, height = 10, units="cm", res=300, type="cairo-png")
print(aligned_plots[[1]])
crop::dev.off.crop()
png(paste0(here::here("figure"), "/elecscatter2.png"),
    width = 20, height = 10, units="cm", res=300, type="cairo-png")
print(aligned_plots[[2]])
crop::dev.off.crop()
```

\vspace*{0.2cm}
\only<1>{\centerline{\includegraphics[width=14cm, height=20cm]{figure/elecscatter1.png}}}
\only<2>{\centerline{\includegraphics[width=14cm, height=20cm]{figure/elecscatter2.png}}}

## Forecasting peak electricity demand
\vspace*{0.2cm}

```{r elec5}
df <- vic_elec %>%
  as_tibble() %>%
  mutate(
    dow = lubridate::wday(Date, week_start = 1),
    Workday = if_else(dow <= 5 & !Holiday, "Workday", "Non-workday"),
    state = strftime(Time, format = "%H:%M"),
  )
states <- sort(unique(df$state))
for (i in seq_along(states)) {
  Cairo::CairoPDF(paste0(here::here("figure"), "/elec", i, ".pdf"),
    width = 20 / 2.54, height = 10 / 2.54)
  p <- df %>%
    filter(state == states[i]) %>%
    ggplot(aes(x = Temperature, y = Demand, col = Workday)) +
    geom_point(alpha = 0.6) +
    geom_label(aes(x = 10, y = 9000, label = states[i]), color = "black") +
    coord_cartesian(ylim=range(df$Demand), xlim=range(df$Temperature)) +
    labs(y = "Demand (GW)", x = "Temperature (degrees C)")
  print(p)
  crop::dev.off.crop()
}
```

\centerline{\animategraphics[width=14cm,loop]{48}{figure/elec}{1}{48}}

## Forecasting peak electricity demand

\alert{Predictors}\vspace*{-0.2cm}
  \begin{itemize}\itemsep=0cm\parskip=0cm
    \item calendar effects: time of day, day of week, time of year, holidays, etc.
    \item prevailing and recent weather conditions
    \item climate change
    \item demand response incentives
    \item changing technology
    \item economic and demographic changes
  \end{itemize}\vspace*{0.2cm}

  \begin{block}{}
    \bfseries We build a nonparametric stochastic model of demand as a function of these predictors.
  \end{block}

## Forecastability factors

 1. we have a good understanding of the factors that contribute to it, and can measure them.
 2. there is lots of data available;
 3. the future is somewhat similar to the past
 4. the forecasts cannot affect the thing we are trying to forecast.

# Forecasting COVID19 cases

## Forecasting COVID19 cases

\placefig{0}{1}{height=9.2cm, width=20cm}{covid}

## Australian Health Protection Principal Committee

\begin{block}{}The \textbf{Australian Health Protection Principal Committee} is the key decision-making committee for national health emergencies. It comprises all state and territory Chief Health Officers and is chaired by the Australian Chief Medical Officer.
\end{block}

\begin{alertblock}{COVID-19 forecasting group}
\begin{multicols}{3}\small
\begin{itemize}\tightlist
\item Peter Dawson
\item Nick Golding
\item Rob J Hyndman
\item Dennis Liu
\item Michael Lydeamore
\item James M McCaw
\item Jodie McVernon
\item Pablo \rlap{Montero-Manso}
\item Robert Moss
\item Mitchell \rlap{O'Hara-Wild}
\item David J Price
\item Joshua V Ross
\item Gerry Ryan
\item Freya M Shearer
\item Tobin South
\item Nicholas Tierney
\item Ruarai Tobin
\end{itemize}
\end{multicols}\vspace*{-0.2cm}
\end{alertblock}

## Data sources

* Case-level data of all positive COVID-19 tests: onset and detection times.
* Daily population mobility data from Google, Apple & Facebook
* Weekly non-household contact surveys
* Weekly behavioural surveys
* Daily case numbers from many countries and regions via the Johns Hopkins COVID-19 repository

## Case numbers
\fontsize{13}{14}\sf

```{r, echo=FALSE, fig.height=2.9}
state_colours <- c(
  NSW = "#56b4e9",
  VIC = "#0072b2",
  QLD = "#009e73",
  SA = "#f0e442",
  NT = "#d55e00",
  WA = "#e69f00",
  TAS = "#cc79a7",
  ACT = "#cccccc"
)
localcases %>%
  filter(date <= max(date)-3) |>
  autoplot(n+1) +
  labs(x = "Date of symptom onset", y = "Number of daily cases") +
  scale_x_date(
    breaks = seq(as.Date("2020-01-01"), by="1 month", length=35),
    minor_breaks = NULL,
    labels = c(
      "J\n 2020","F","M","A","M","J","J","A","S","O","N","D",
      "J\n 2021","F","M","A","M","J","J","A","S","O","N","D",
      "J\n 2022","F","M","A","M","J","J","A","S","O","N")
  ) +
  scale_color_manual(values = state_colours) +
  scale_y_log10(breaks = 10^(1:5),
  labels = c("10","100","1000","10000","100000"))
```

* Recent case numbers are uncertain and incomplete as date of onset is not known until symptoms show and a test is obtained.

## A model ensemble
\fontsize{14}{16}\sf
\vspace*{0.2cm}

### Model 1: SEEIIR (Uni Melbourne/Doherty Institute)

* Stochastic compartmental model with time-varying effective reproduction number.

### Model 2: Generative model (Uni Adelaide)

* Simulation with three types of infectious individuals: imported, asymptomatic, symptomatic

### Model 3: Global AR model (Monash)

* Single model fitted to all Johns Hopkins data from countries and regions with sufficient data.
* Series with obvious anomalies removed.

## Forecasting ensemble
\fontsize{14}{17}\sf

* Forecasts obtained from a equally-weighted mixture distribution of the component forecasts.
* Also known as "linear pooling"
* Works best when individual models are over-confident and use different data sources.

## Ensemble forecasts: Victoria

```{r combined_forecasts, eval=FALSE}
# Read weekly samples files from mediaflux and save as rds file
samples <- fs::dir_ls("~/mediaflux", glob = "*.csv") %>%
  stringr::str_subset("combined_samples_202") %>%
  purrr::map_dfr(read_csv) %>%
  nest(sample = sim1:sim2000) %>%
  group_by(date, state, .model, forecast_origin) %>%
  mutate(sample = list(unname(unlist(sample)))) %>%
  ungroup() %>%
  saveRDS(file = "samples.rds")
```

```{r read_samples}
samples <- readRDS("samples.rds")
ensemble <- make_ensemble(samples)
```

```{r some_plots, include=FALSE}
vic_ensemble <- ensemble %>% filter(state == "VIC")
origins <- sort(unique(vic_ensemble$forecast_origin))
origins <- origins[c(2, 8, 11, 33, 48, 88, 106)]
for (i in seq_along(origins)) {
  p <- vic_ensemble %>%
    filter(forecast_origin == origins[i], date <= origins[i] + 7 * 4) %>%
    mutate(dist = dist_sample(sample)) %>%
    select(-sample) %>%
    as_fable(
      index = date, key = forecast_origin,
      response = "n", distribution = dist
    ) %>%
    autoplot(level = c(50, 60, 70, 80, 90), point_forecast = lst(median)) +
    autolayer(
      filter(
        localcases, state == "VIC",
        date >= origins[i] - 7 * 12, date <= origins[i] + 7 * 4
      ),
      n
    ) +
    scale_x_date(
      breaks = seq(as.Date("2020-01-01"), by = "1 month", l = 24),
      minor_breaks = NULL,
      labels = paste(
        rep(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), 2),
        rep(2020:2021, c(12, 12))
      )
    ) +
    theme(legend.position = "none") +
    xlab("Date of symptom onset") + ylab("Number of daily cases")
  Cairo::CairoPDF(paste0(here::here("figure"), "/ensemble", i, ".pdf"),
    width = 20 / 2.54, height = 10 / 2.54
  )
  print(p)
  crop::dev.off.crop()
}
```

\only<1>{\full{ensemble1}}
\only<2>{\full{ensemble4}}
\only<3>{\full{ensemble6}}
\only<4>{\full{ensemble7}}

## Forecastability factors

 1. we have a good understanding of the factors that contribute to it, and can measure them.
 2. there is lots of data available;
 3. the future is somewhat similar to the past
 4. the forecasts cannot affect the thing we are trying to forecast.

# The bright future of forecasting

## The bright future of forecasting
\fontsize{20}{24}\sf

 * What about neural networks and deep learning?\pause
 * Will we ever be able to forecast "black swans"?\pause
 * Does more data mean better forecasts?\pause
 * Will AI take over forecasting?\pause
 * Are there many jobs for forecasters?

## More information
\fontsize{20}{24}\sf

\href{https://robjhyndman.com}{\faIcon{home} robjhyndman.com}

\href{https://twitter.com/robjhyndman}{\faIcon{twitter} @robjhyndman}

\href{https://github.com/robjhyndman}{\faIcon{github}  @robjhyndman}

\href{mailto:rob.hyndman@monash.edu}{\faIcon{envelope}  rob.hyndman@monash.edu}

\vspace*{0.8cm}\fontsize{19}{19}\sf

###
Slides: \texttt{\href{https://robjhyndman.com/future_forecasting}{robjhyndman.com/future\_forecasting}}
